# PHP
alias phpunitw="phpunit-watcher watch"
alias c="composer"
alias cu="composer update"
alias cr="composer require"
alias ci="composer install"
alias cda="composer dump-autoload -o"
alias p="phpunit"
alias pf="phpunit --filter "
alias sshconfig="vi ~/.ssh/config"
alias copykey='command cat ~/.ssh/id_rsa.public | pbcopy'

# JavaScript
alias jest="./node_modules/.bin/jest"
alias npmr="npm run"

# List all files colorized in long format
alias l="ls -laF"

# PhPStorm
alias phpstorm='open -a /Applications/PhpStorm.app "`pwd`"'

# VSCode
alias code='open -a "/Applications/Visual Studio Code.app" "`pwd`"'

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Flush Directory Service cache
alias flushdns="sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder"

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Restart touch bar
alias touchbar="killall ControlStrip"

# Docker
alias dce='docker-compose execute'
alias docker-composer='docker run --rm --interactive --tty --volume $PWD:/app composer'

# CDS
alias cds-docker-compose='docker-compose \
 -p cpapdropship \
 -f docker/docker-compose.common.yml \
 -f docker/docker-compose.common-traefik.yml \
 -f docker/docker-compose.macos-project_root.yml \
 -f docker/docker-compose.testing.yml \
 -f docker/docker-compose.testing-traefik.yml \
 -f docker/docker-compose.tinkerwell.yml \
 -f docker/docker-compose.tinkerwell-traefik.yml \
 -f docker/docker-compose.traefik-external.yml \
 -f docker/docker-compose.override.yml'

alias cds-cd='cd ~/Code/app.cpapdropship.com'
alias cds-up='cds-docker-compose up'
alias cds-down='cds-docker-compose down'
alias cds-restart='cds-docker-compose restart'
alias cds-artisan='cds-docker-compose exec php php artisan'
alias cds-tinker='cds-docker-compose exec php php artisan tinker'
alias cds-composer='cds-docker-compose exec php composer'
alias cds-ide='cds-docker-compose exec php composer ide'
alias cds-test-artisan='cds-docker-compose exec php_test php artisan'
alias cds-test-fresh='cds-test-artisan migrate:fresh'
alias cds-fresh='cds-artisan migrate:fresh --seed'
alias cds-phpunit='cds-docker-compose exec php_test ./vendor/bin/phpunit'
alias cds-phpunit-coverage='cds-docker-compose exec php_test ./vendor/bin/phpunit --coverage-html=public/coverage'
alias cds-dusk='cds-docker-compose exec php_test php artisan dusk'
alias cds-dusk:fails='cds-docker-compose exec php_test php artisan dusk:fails'
alias cds-cs='cds-docker-compose exec php php vendor/bin/phpcs --runtime-set ignore_warnings_on_exit true'
alias cds-cbf='cds-docker-compose exec php php vendor/bin/phpcbf -n'
alias cds-psalm='cds-docker-compose exec php php vendor/bin/psalm'
alias cds-eslint='npx eslint --ext .js,.vue resources/js'
alias cds-eslint-fix='npx eslint --ext .js,.vue --fix resources/js'
alias cds-check='(cds-cs; cds-phpunit; cds-dusk; cds-psalm; cds-eslint)'
alias cds-fix='(cds-cbf; cds-eslint-fix)'
alias cds-shell='cds-docker-compose exec php bash'
alias cds-mysql='cds-docker-compose exec -e MYSQL_PWD=password php mysql -h db -ucpapdropship cpapdropship'
alias cds-test-mysql='cds-docker-compose exec -e MYSQL_PWD=password php_test mysql -h db -ucpapdropship cpapdropship'
alias cds-php='cds-docker-compose exec php php'

alias cds-snapshot-create='cds-artisan snapshot:create'
alias cds-snapshot-list='cds-artisan snapshot:list'

function cds-test-snapshot-load {
    SNAPSHOT="$1"
    shift
    cds-mysql --execute="SET autocommit=0 ; source database/snapshots/$SNAPSHOT.sql ; COMMIT ;" "$@"
}

function cds-snapshot-load {
    SNAPSHOT="$1"
    shift
    cds-mysql --execute="SET autocommit=0 ; source database/snapshots/$SNAPSHOT.sql ; COMMIT ;" "$@"
}

function cds-run {
    FILE="$1"
    shift
    KERNEL=$(cat <<__KERNEL__
require __DIR__ . '/vendor/autoload.php';
\$app = require __DIR__ . '/bootstrap/app.php';
\$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();
require_once '$FILE';
__KERNEL__
)
    cds-php -r "$KERNEL" "$@"
}

# Liquid Forms
alias lf-cd='cd ~/Code/liquidforms'
alias lf-up='docker-compose up'
alias lf-down='docker-compose down'
alias lf-restart='docker-compose restart'
alias lf-artisan='docker-compose exec php php artisan'
alias lf-tinker='docker-compose exec php php artisan tinker'
alias lf-composer='docker-compose exec php composer'

# FanDraft
alias fd-up='docker-compose up'
alias fd-down='docker-compose down'
alias fd-restart='docker-compose restart'
alias fd-artisan='docker-compose exec php php artisan'
alias fd-tinker='docker-compose exec php php artisan tinker'
alias fd-composer='docker-compose exec php composer'

# beausimensen
alias bs-docker-compose='docker-compose \
    -p beausimensen \
    -f docker/docker-compose.common.yml \
    -f docker/docker-compose.common-traefik.yml \
    -f docker/docker-compose.macos-project_root.yml \
    -f docker/docker-compose.testing.yml \
    -f docker/docker-compose.testing-traefik.yml \
    -f docker/docker-compose.tinkerwell.yml \
    -f docker/docker-compose.tinkerwell-traefik.yml \
    -f docker/docker-compose.traefik-external.yml \
    -f docker/docker-compose.override.yml'

alias bs-cd='cd ~/Code/beausimensen'
alias bs-up='bs-docker-compose up'
alias bs-down='bs-docker-compose down'
alias bs-restart='bs-docker-compose restart'
alias bs-artisan='bs-docker-compose exec php php artisan'
alias bs-tinker='bs-docker-compose exec php php artisan tinker'
alias bs-composer='bs-docker-compose exec php composer'
alias bs-ide='bs-composer ide'
alias bs-test-artisan='bs-docker-compose exec php_test php artisan'
alias bs-test-fresh='bs-test-artisan migrate:fresh'
alias bs-fresh='bs-artisan migrate:fresh'
alias bs-phpunit='bs-docker-compose exec php_test ./vendor/bin/phpunit'
alias bs-dusk='bs-docker-compose exec php_test php artisan dusk'
alias bs-dusk:fails='bs-docker-compose exec php_test php artisan dusk:fails'
alias bs-cs='bs-docker-compose exec php php vendor/bin/phpcs'
alias bs-cbf='bs-docker-compose exec php php vendor/bin/phpcbf'
alias bs-psalm='bs-docker-compose exec php php vendor/bin/psalm'
alias bs-eslint='npx eslint resources/js'
alias bs-eslint-fix='npx eslint --fix resources/js'
alias bs-check='(bs-cs; bs-phpunit; bs-dusk; bs-psalm; bs-eslint)'
alias bs-fix='(bs-cbf; bs-eslint-fix)'
alias bs-shell='bs-docker-compose exec php bash'
alias bs-mysql='bs-docker-compose exec -e MYSQL_PWD=password php mysql -h db -ubeausimensen beausimensen'
alias bs-php='bs-docker-compose exec php php'

function bs-mysql-load {
    SNAPSHOT="$1"
    shift
    bs-mysql --execute="SET autocommit=0 ; source database/snapshots/$SNAPSHOT.sql ; COMMIT ;" "$@"
}

function bs-run {
    FILE="$1"
    shift
    KERNEL=$(cat <<__KERNEL__
require __DIR__ . '/vendor/autoload.php';
\$app = require __DIR__ . '/bootstrap/app.php';
\$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();
require_once '$FILE';
__KERNEL__
)
    bs-php -r "$KERNEL" "$@"
}


# astrocasts
alias ac-docker-compose='docker-compose \
    -p astrocasts \
    -f docker/docker-compose.common.yml \
    -f docker/docker-compose.common-traefik.yml \
    -f docker/docker-compose.macos-project_root.yml \
    -f docker/docker-compose.testing.yml \
    -f docker/docker-compose.testing-traefik.yml \
    -f docker/docker-compose.tinkerwell.yml \
    -f docker/docker-compose.tinkerwell-traefik.yml \
    -f docker/docker-compose.traefik-external.yml \
    -f docker/docker-compose.override.yml'

alias ac-cd='cd ~/Code/astrocasts'
alias ac-up='ac-docker-compose up'
alias ac-down='ac-docker-compose down'
alias ac-restart='ac-docker-compose restart'
alias ac-artisan='ac-docker-compose exec php php artisan'
alias ac-tinker='ac-docker-compose exec php php artisan tinker'
alias ac-composer='ac-docker-compose exec php composer'
alias ac-ide='ac-composer ide'
alias ac-test-artisan='ac-docker-compose exec php_test php artisan'
alias ac-test-fresh='ac-test-artisan migrate:fresh'
alias ac-fresh='ac-artisan migrate:fresh'
alias ac-phpunit='ac-docker-compose exec php_test ./vendor/bin/phpunit'
alias ac-dusk='ac-docker-compose exec php_test php artisan dusk'
alias ac-dusk:fails='ac-docker-compose exec php_test php artisan dusk:fails'
alias ac-cs='ac-docker-compose exec php php vendor/bin/phpcs'
alias ac-cbf='ac-docker-compose exec php php vendor/bin/phpcbf'
alias ac-psalm='ac-docker-compose exec php php vendor/bin/psalm'
alias ac-eslint='npx eslint resources/js'
alias ac-eslint-fix='npx eslint --fix resources/js'
alias ac-check='(ac-cs; ac-phpunit; ac-dusk; ac-psalm; ac-eslint)'
alias ac-fix='(ac-cbf; ac-eslint-fix)'
alias ac-shell='ac-docker-compose exec php bash'
alias ac-mysql='ac-docker-compose exec -e MYSQL_PWD=password php mysql -h db -uastrocasts astrocasts'
alias ac-php='ac-docker-compose exec php php'

function ac-mysql-load {
    SNAPSHOT="$1"
    shift
    ac-mysql --execute="SET autocommit=0 ; source database/snapshots/$SNAPSHOT.sql ; COMMIT ;" "$@"
}

function ac-run {
    FILE="$1"
    shift
    KERNEL=$(cat <<__KERNEL__
require __DIR__ . '/vendor/autoload.php';
\$app = require __DIR__ . '/bootstrap/app.php';
\$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();
require_once '$FILE';
__KERNEL__
)
    ac-php -r "$KERNEL" "$@"
}

# dflydev
alias df-docker-compose='docker-compose \
    -p dflydev \
    -f docker/docker-compose.common.yml \
    -f docker/docker-compose.common-traefik.yml \
    -f docker/docker-compose.macos-project_root.yml \
    -f docker/docker-compose.testing.yml \
    -f docker/docker-compose.testing-traefik.yml \
    -f docker/docker-compose.tinkerwell.yml \
    -f docker/docker-compose.tinkerwell-traefik.yml \
    -f docker/docker-compose.traefik-external.yml \
    -f docker/docker-compose.override.yml'

alias df-cd='cd ~/Code/dflydev'
alias df-up='df-docker-compose up'
alias df-down='df-docker-compose down'
alias df-restart='df-docker-compose restart'
alias df-artisan='df-docker-compose exec php php artisan'
alias df-tinker='df-docker-compose exec php php artisan tinker'
alias df-composer='df-docker-compose exec php composer'
alias df-ide='df-composer ide'
alias df-test-artisan='df-docker-compose exec php_test php artisan'
alias df-test-fresh='df-test-artisan migrate:fresh'
alias df-fresh='df-artisan migrate:fresh'
alias df-phpunit='df-docker-compose exec php_test ./vendor/bin/phpunit'
alias df-dusk='df-docker-compose exec php_test php artisan dusk'
alias df-dusk:fails='df-docker-compose exec php_test php artisan dusk:fails'
alias df-cs='df-docker-compose exec php php vendor/bin/phpcs'
alias df-cbf='df-docker-compose exec php php vendor/bin/phpcbf'
alias df-psalm='df-docker-compose exec php php vendor/bin/psalm'
alias df-eslint='npx eslint resources/js'
alias df-eslint-fix='npx eslint --fix resources/js'
alias df-check='(df-cs; df-phpunit; df-dusk; df-psalm; df-eslint)'
alias df-fix='(df-cbf; df-eslint-fix)'
alias df-shell='df-docker-compose exec php bash'
alias df-mysql='df-docker-compose exec -e MYSQL_PWD=password php mysql -h db -udflydev dflydev'
alias df-php='df-docker-compose exec php php'

function df-mysql-load {
    SNAPSHOT="$1"
    shift
    df-mysql --execute="SET autocommit=0 ; source database/snapshots/$SNAPSHOT.sql ; COMMIT ;" "$@"
}

function df-run {
    FILE="$1"
    shift
    KERNEL=$(cat <<__KERNEL__
require __DIR__ . '/vendor/autoload.php';
\$app = require __DIR__ . '/bootstrap/app.php';
\$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();
require_once '$FILE';
__KERNEL__
)
    df-php -r "$KERNEL" "$@"
}
